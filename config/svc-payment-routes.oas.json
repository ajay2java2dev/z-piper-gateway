{
  "openapi": "3.0.1",
  "info": {
    "title": "Loan Payments API",
    "description": "Perform various payment operations against a loan, like posting a payment intent with the payment provider, retrieving all scheduled transactions for a loan number, deleting a scheduled payment, updating a scheduled payment, wallet related operations etc.",
    "contact": {
      "name": "Dara Team",
      "email": "info@sagent.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/sagent-ajay-dev/svc-payments/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://svc-loan-payments.gcp-dv.msh-np.sagent.online",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "Authorization": []
    }
  ],
  "tags": [
    {
      "name": "posted-payments",
      "description": "Perform payment ledger related operations like posting payment, reversing and reallocating  the posted transactions etc. These operations are performed against the ledger service and assumes the  money has already moved."
    },
    {
      "name": "events",
      "description": "These set of APIs are used to perform event related operations like creating an autopay event for a specific loan etc."
    },
    {
      "name": "wallet",
      "description": "Perform wallet related operations like adding a new wallet, removing, updating and retrieving wallets."
    },
    {
      "name": "payment-decision",
      "description": "This API is used to run PAID logic for a loan number."
    },
    {
      "name": "payment-intents",
      "description": "Perform various payment operations against a loan, like posting a payment intent  with the payment provider, retrieving all scheduled transactions for a loan number,  deleting a scheduled payment, updating a scheduled payment etc."
    }
  ],
  "paths": {
    "/loans/{loanNumber}/wallet": {
      "post": {
        "tags": [
          "wallet"
        ],
        "summary": "Add wallet",
        "description": "This endpoint is used to add a wallet for a loan number by taking the  wallet details as input.",
        "operationId": "doPostBankDetailsToAddWallet",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Wallet added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanNumber}/payment": {
      "post": {
        "tags": [
          "posted-payments"
        ],
        "summary": "Post a payment",
        "description": "This endpoint is used to post a payment with single or multiple entries  with different transaction codes. The payment can be posted with checkPAID as true or false. If checkPAID is true, then the transaction code will be ignored and sum of all amount fields in all of the entries will be the input for running PAID logic and the resulting entries will be posted. If checkPAID is false,  the given transaction entries will be posted as is.",
        "operationId": "doPostPaymentByAccountNumber",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Payment posted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanNumber}/payment/reverse": {
      "post": {
        "tags": [
          "posted-payments"
        ],
        "summary": "Reverse a payment",
        "description": "This endpoint is used to reverse one or more payments by taking  list of reversalId as input.",
        "operationId": "doPostPaymentReverseByAccountNumber",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Reverse Payment accepted successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanNumber}/payment/reverse/preview": {
      "post": {
        "tags": [
          "posted-payments"
        ],
        "summary": "Reversal impact preview",
        "description": "This endpoint is used to preview the impact of reversal. It takes the loan balances, payment breakdown and previous transactions as input.  It calculates and returns the impacted loan balances after reversal.",
        "operationId": "doPostReversalImpactPreviewByAccountNumber",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpactPreviewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reversal Impact Preview calculated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactPreviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanNumber}/payment/reallocate": {
      "post": {
        "tags": [
          "posted-payments"
        ],
        "summary": "Reallocate a payment",
        "description": "This endpoint is used to reallocate one or more payments by taking list of reversalId and list of transaction entries as input.  The transaction entries can be submitted with checkPAID as true or false.  If checkPAID is true, then the transaction code will be ignored and sum of all  amount fields in all of the entries will be the input for running PAID logic  and the resulting entries will be posted. If checkPAID is false,  the given transaction entries will be posted as is.",
        "operationId": "doPostPaymentReallocationByAccountNumber",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Reallocation Payment Accepted successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanNumber}/payment/realloc/preview": {
      "post": {
        "tags": [
          "posted-payments"
        ],
        "summary": "Reallocation impact preview",
        "description": "This endpoint is used to preview the impact of reallocation. It takes the loan balances, payment breakdown, previous transactions and reallocated transactions as input. It calculates and returns the impacted loan balances  and the list of transactions for reallocation in the posting order.",
        "operationId": "doPostReallocImpactPreviewByAccountNumber",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpactPreviewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reallocation Impact Preview calculated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactPreviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanNumber}/payment-decision": {
      "post": {
        "tags": [
          "payment-decision"
        ],
        "summary": "Run PAID logic",
        "description": "This endpoint is used to run PAID logic for a loan number. It takes loan number and payment amount as input and returns the list of transaction entries.",
        "operationId": "runPaymentDecisionWaterfall",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPaymentDecisionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment decision framed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentDecisionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanNumber}/payment-decision-process": {
      "post": {
        "tags": [
          "payment-decision"
        ],
        "summary": "Run Payment Waterfall Posting Decision logic",
        "description": "This endpoint is used to run PAID logic for a loan number. It takes loan number, payment amount, escrow & principal instructions as input and returns the list of transaction entries.",
        "operationId": "runPaymentDecisionProcessFlow",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPaymentDecisionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment decision framed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentDecisionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanNumber}/intents": {
      "post": {
        "tags": [
          "payment-intents"
        ],
        "summary": "Post a payment intent.",
        "description": "Submit a payment with single or multiple entries with different transaction  codes which are posted against a given payment-provider. Along with the transaction entries, either bank details or wallet ID  should also be provided.  The user can submit either current dated or future dated payments. The payment can be submitted with checkPAID as true or false.  If checkPAID is true, then the transaction code will be ignored and sum of  all amount fields in all of the entries will be the input for running PAID  logic and the resulting entries will be posted. If checkPAID is false,  the given transaction entries will be posted as is.",
        "operationId": "doSubmitPaymentByAccountNumber",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Payment submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanNumber}/events/autopay": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Produce an Autopay event",
        "description": "This endpoint is used to produce an autopay event for a loan number. It takes loan number and payment amount as input.",
        "operationId": "createAutoPayEvent",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAutoPayRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Payment posted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoPayEventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanNumber}/wallets/{walletId}": {
      "delete": {
        "tags": [
          "wallet"
        ],
        "summary": "Delete wallet",
        "description": "This endpoint is used to delete a wallet by wallet id for a loan number.",
        "operationId": "doDeleteWallet",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted wallet successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "wallet"
        ],
        "summary": "Update wallet",
        "description": "This endpoint is used to update a wallet by wallet id for a loan number by taking the wallet details as input.",
        "operationId": "doPostBankDetailsToUpdateWallet",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated Wallet details successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanNumber}/intents/scheduled/{confirmationNumber}": {
      "delete": {
        "tags": [
          "payment-intents"
        ],
        "summary": "Delete a scheduled payment intent.",
        "description": "This endpoint is used to delete a scheduled payment by confirmation number for a loan number .",
        "operationId": "doDeleteScheduledPayment",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "confirmationNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted scheduled payment successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletedScheduledPayment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "payment-intents"
        ],
        "summary": "Update a scheduled payment intent.",
        "description": "This endpoint is used to update a scheduled payment by confirmation number for a loan number.",
        "operationId": "doUpdateScheduledPayment",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "confirmationNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated scheduled payment successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanNumber}/wallets": {
      "get": {
        "tags": [
          "wallet"
        ],
        "summary": "Get all wallets",
        "description": "This endpoint is used to get all wallets for a loan number.",
        "operationId": "getWallets",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Fetched list of wallets successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WalletDetails"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/loans/{loanNumber}/intents/scheduled/onetime": {
      "get": {
        "tags": [
          "payment-intents"
        ],
        "summary": "Get all scheduled onetime payment intents.",
        "description": "This endpoint is used to get all scheduled transactions for a loan number.",
        "operationId": "getScheduledTransactions",
        "parameters": [
          {
            "name": "X-PlatformId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "default": "SG"
            }
          },
          {
            "name": "X-TenantId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-BrandId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loanNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 16,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationId",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fetched list of scheduled transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduledPayment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "properties": {
          "line1": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "integer",
            "format": "int32"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "BankDetails": {
        "required": [
          "accountNumber",
          "accountType",
          "city",
          "routingNumber",
          "state"
        ],
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "example": "Checking",
            "enum": [
              "Unknown",
              "Checking",
              "Saving"
            ]
          },
          "accountNumber": {
            "type": "string"
          },
          "routingNumber": {
            "type": "string"
          },
          "bankName": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          }
        }
      },
      "CardDetails": {
        "required": [
          "accountNumber",
          "expireMonth",
          "expireYear",
          "nameOnAccount",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "cardType": {
            "type": "string",
            "example": "AmericanExpress",
            "enum": [
              "Unknown",
              "AmericanExpress",
              "AMEX",
              "MasterCard",
              "MC",
              "Visa",
              "JCB",
              "Discover",
              "Diners",
              "Maestro",
              "VisaElectron",
              "VPay"
            ]
          },
          "accountNumber": {
            "type": "string"
          },
          "nameOnAccount": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "expireMonth": {
            "type": "integer",
            "format": "int32"
          },
          "expireYear": {
            "type": "integer",
            "format": "int32"
          },
          "cvv": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          }
        }
      },
      "CustomerDetails": {
        "type": "object",
        "properties": {
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "dayPhoneNr": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "WalletDetails": {
        "type": "object",
        "properties": {
          "walletId": {
            "type": "string"
          },
          "paymentProvider": {
            "type": "string"
          },
          "bankDetails": {
            "$ref": "#/components/schemas/BankDetails"
          },
          "cardDetails": {
            "$ref": "#/components/schemas/CardDetails"
          },
          "customerDetails": {
            "$ref": "#/components/schemas/CustomerDetails"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "stackTrace": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "CreatePaymentResponse": {
        "required": [
          "postedConfirmationNumber"
        ],
        "type": "object",
        "properties": {
          "postedConfirmationNumber": {
            "type": "string",
            "description": "Confirmation number generated by this service. "
          }
        }
      },
      "CreatePaymentRequest": {
        "required": [
          "paymentInstructions",
          "paymentType"
        ],
        "type": "object",
        "properties": {
          "confirmationNumber": {
            "type": "string",
            "description": "Confirmation number generated by Sagent services. ",
            "example": "01GYDDJMCKRXWEQA3F53M1WN38"
          },
          "paymentCustomerInformation": {
            "$ref": "#/components/schemas/PaymentCustomerInformation"
          },
          "paymentInstructions": {
            "$ref": "#/components/schemas/PaymentInstructions"
          },
          "paymentSource": {
            "type": "string",
            "description": "\"Origin Source is the origination source by which the order is placed  (e.g. web or telephone).\" ",
            "example": "TELEPHONE",
            "enum": [
              "WEB",
              "IVR",
              "TELEPHONE"
            ]
          },
          "paymentType": {
            "type": "string",
            "example": "OTP_REG",
            "enum": [
              "OTP_REG",
              "RECURRING",
              "OTP_REVERSE",
              "OTP_REALLOC"
            ]
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/WalletDetails"
          }
        }
      },
      "PaymentCustomerInformation": {
        "required": [
          "customerId",
          "linkedAccountId",
          "linkedAccountPartyId"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "example": "ee2f8f4b-a00b-4f57-81e4-c80bb3d0a999"
          },
          "customerName": {
            "type": "string",
            "example": "Clark Griswold"
          },
          "linkedAccountPartyId": {
            "type": "string",
            "example": "4pJE1ptALoHlyV---kLF-Bg-"
          },
          "linkedAccountId": {
            "type": "string",
            "example": "4pJE2Q-NIruzB-----HF-77-"
          }
        }
      },
      "PaymentInstructions": {
        "type": "object",
        "properties": {
          "checkPAID": {
            "type": "boolean",
            "description": "\"Check PAID is a boolean value that indicates whether the PAID logic (rules engine) needs to be run.\" "
          },
          "transactionEntries": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "description": "\"Transaction Entries is a list of payment transaction entries.\" ",
            "items": {
              "$ref": "#/components/schemas/TransactionEntry"
            }
          },
          "reversals": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "description": "\"Reversals is a list of payment transaction reversals.\" ",
            "items": {
              "$ref": "#/components/schemas/Reversal"
            }
          }
        }
      },
      "Reversal": {
        "required": [
          "reverseId"
        ],
        "type": "object",
        "properties": {
          "reverseId": {
            "type": "string",
            "description": "'ReverseId is the transaction id once the specific payment transaction is complete.' ",
            "example": "4qdUDhgAeJGQLF---V5F-Go-"
          }
        },
        "description": "\"Reversals is a list of payment transaction reversals.\" "
      },
      "TransactionEntry": {
        "type": "object",
        "properties": {
          "transactionCode": {
            "type": "string",
            "enum": [
              "postPrin",
              "postRegPI",
              "postUnapplied",
              "postEsc",
              "postRegPITI"
            ]
          },
          "isDebit": {
            "type": "boolean"
          },
          "paymentEffectiveDate": {
            "type": "string",
            "description": "'ISO 8601 format: YYYY-MM-DD.  Should be equal to current day unless the user chooses a prior day.' ",
            "format": "date"
          },
          "principalAmount": {
            "type": "number",
            "description": "The amount of the order, net to transfer to receiver",
            "format": "double",
            "example": 2010.55
          },
          "interestAmount": {
            "type": "number",
            "description": "The amount of the order, net to transfer to receiver",
            "format": "double",
            "example": 2010.55
          },
          "escrowAmount": {
            "type": "number",
            "description": "The amount of the order, net to transfer to receiver",
            "format": "double",
            "example": 2010.55
          },
          "feeAmount": {
            "type": "number",
            "description": "The amount of the order, net to transfer to receiver",
            "format": "double",
            "example": 2010.55
          },
          "unappliedAmount": {
            "type": "number",
            "description": "The amount of the order, net to transfer to receiver",
            "format": "double",
            "example": 2010.55
          },
          "piAmount": {
            "type": "number",
            "description": "The amount of the order, net to transfer to receiver",
            "format": "double",
            "example": 2010.55
          },
          "transactionRequestId": {
            "type": "string",
            "description": "Transaction Request Id",
            "example": "10"
          },
          "transactionRequestGuid": {
            "type": "string",
            "description": "Transaction Request Guid",
            "example": "a849fdef-1b37-481d-b5a4-7d7d5c86b220"
          }
        },
        "description": "\"Transaction Entries is a list of payment transaction entries.\" "
      },
      "ImpactPreviewResponse": {
        "required": [
          "confirmationNumber",
          "loanBalances"
        ],
        "type": "object",
        "properties": {
          "confirmationNumber": {
            "type": "string",
            "description": "Confirmation number generated by Sagent services. "
          },
          "loanBalances": {
            "$ref": "#/components/schemas/LoanBalances"
          },
          "reallocatedTransactions": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        }
      },
      "LoanBalances": {
        "required": [
          "escrowBalance",
          "nextScheduledDueDate",
          "unappliedFundBalance",
          "unpaidPrincipalBalance"
        ],
        "type": "object",
        "properties": {
          "unpaidPrincipalBalance": {
            "type": "number",
            "description": "The unpaid principal balance of the loan",
            "format": "double",
            "example": 160568
          },
          "escrowBalance": {
            "type": "number",
            "description": "The escrow balance of the loan",
            "format": "double",
            "example": 1568.28
          },
          "unappliedFundBalance": {
            "type": "number",
            "description": "The unapplied funds balance of the loan",
            "format": "double",
            "example": 1600
          },
          "lateFee": {
            "type": "number",
            "description": "The late fee of the loan",
            "format": "double",
            "example": 234.56
          },
          "nextScheduledDueDate": {
            "type": "string",
            "description": "'ISO 8601 format: YYYY-MM-DD.  The next scheduled due date of the loan.' ",
            "format": "date"
          },
          "unpaidPrincipalBalanceDifference": {
            "type": "number",
            "description": "The difference between old and new unpaid principal balances of the loan",
            "format": "double",
            "example": 800
          },
          "escrowBalanceDifference": {
            "type": "number",
            "description": "The difference between old and new escrow balances of the loan",
            "format": "double",
            "example": 300
          },
          "unappliedFundBalanceDifference": {
            "type": "number",
            "description": "The difference between old and new unapplied fund balances of the loan",
            "format": "double",
            "example": 1000
          },
          "nextScheduledDueDateDifference": {
            "type": "integer",
            "description": "The month difference between old and new next scheduled due dates of the loan",
            "format": "int32",
            "example": 1
          }
        }
      },
      "Transaction": {
        "required": [
          "amount",
          "effectiveDate",
          "transactionCode"
        ],
        "type": "object",
        "properties": {
          "selected": {
            "type": "boolean",
            "description": "'Selected is a boolean value that indicates whether the transaction is selected for reallocation.' "
          },
          "confirmationNumber": {
            "type": "string",
            "description": "Confirmation number generated by Sagent services. "
          },
          "postedDate": {
            "type": "string",
            "description": "'ISO 8601 format: YYYY-MM-DD.  The date on which the transaction was posted.' ",
            "format": "date"
          },
          "transactionCode": {
            "type": "string",
            "enum": [
              "postPrin",
              "postRegPI",
              "postUnapplied",
              "postEsc",
              "postRegPITI"
            ]
          },
          "effectiveDate": {
            "type": "string",
            "description": "'ISO 8601 format: YYYY-MM-DD.  Should be equal to current day unless the user chooses a prior day.' ",
            "format": "date"
          },
          "amount": {
            "type": "number",
            "description": "The total amount of the transaction entry",
            "format": "double",
            "example": 1300
          },
          "principalAmount": {
            "type": "number",
            "description": "The principal amount of the transaction entry",
            "format": "double",
            "example": 200
          },
          "interestAmount": {
            "type": "number",
            "description": "The interest amount of the transaction entry",
            "format": "double",
            "example": 800
          },
          "escrowAmount": {
            "type": "number",
            "description": "The escrow amount of the transaction entry",
            "format": "double",
            "example": 300
          },
          "unappliedAmount": {
            "type": "number",
            "description": "The unapplied amount of the transaction entry",
            "format": "double",
            "example": 0
          },
          "nextScheduledDueDate": {
            "type": "string",
            "description": "'ISO 8601 format: YYYY-MM-DD.  The next scheduled due date of the loan.' ",
            "format": "date"
          }
        }
      },
      "ImpactPreviewRequest": {
        "required": [
          "loanBalances",
          "paymentBreakdown",
          "previousTransactions"
        ],
        "type": "object",
        "properties": {
          "loanBalances": {
            "$ref": "#/components/schemas/LoanBalances"
          },
          "paymentBreakdown": {
            "$ref": "#/components/schemas/PaymentBreakdown"
          },
          "previousTransactions": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "reallocatedTransactions": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        }
      },
      "PaymentBreakdown": {
        "required": [
          "escrow",
          "interest",
          "monthlyPayment",
          "principal",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type indicates the current state of the loan",
            "example": "current"
          },
          "monthlyPayment": {
            "type": "number",
            "description": "The monthly payment of the loan",
            "format": "double",
            "example": 1000
          },
          "principal": {
            "type": "number",
            "description": "The principal portion of the monthly payment",
            "format": "double",
            "example": 200
          },
          "interest": {
            "type": "number",
            "description": "The interest portion of the monthly payment",
            "format": "double",
            "example": 800
          },
          "escrow": {
            "type": "number",
            "description": "The escrow portion of the monthly payment",
            "format": "double",
            "example": 300
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "description": "Error code for occurred exception",
            "format": "int32",
            "example": 400
          },
          "description": {
            "type": "string",
            "description": "Error description for occurred exception",
            "example": "2010.55"
          }
        }
      },
      "GetPaymentDecisionResponse": {
        "type": "object",
        "properties": {
          "transactionEntries": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "description": "\"Transaction Entries is a list of payment transaction entries.\" ",
            "items": {
              "$ref": "#/components/schemas/TransactionEntry"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          },
          "noOfPrepaidMonths": {
            "type": "integer",
            "description": "number of prepaid months(>0) and due months(<0)",
            "format": "int32"
          },
          "paymentLimit": {
            "type": "integer",
            "description": "total number of prepaid month limit",
            "format": "int32"
          }
        }
      },
      "GetPaymentDecisionRequest": {
        "required": [
          "paymentAmount"
        ],
        "type": "object",
        "properties": {
          "paymentAmount": {
            "type": "number",
            "description": "Funds received from the borrower",
            "format": "double",
            "example": 2010
          },
          "paymentEffectiveDate": {
            "type": "string",
            "format": "date"
          },
          "escrowInstructionAmount": {
            "type": "number",
            "description": "The escrow instruction/amount to be posted requested by the borrower",
            "format": "double",
            "example": 200
          },
          "principalInstructionAmount": {
            "type": "number",
            "description": "The principal instruction/amount to be posted requested by the borrower",
            "format": "double",
            "example": 500
          }
        }
      },
      "Loan": {
        "type": "object",
        "properties": {
          "nextScheduledDueDate": {
            "type": "string"
          },
          "loanMaturityDate": {
            "type": "string"
          },
          "isEscrow": {
            "type": "boolean"
          },
          "isWaterfallConfigAssigned": {
            "type": "boolean"
          },
          "isNoPaymentBlockAssigned": {
            "type": "boolean"
          },
          "isSCRAActive": {
            "type": "boolean"
          },
          "numOfPrepaidMonths": {
            "type": "integer",
            "format": "int32"
          },
          "loanBalances": {
            "$ref": "#/components/schemas/LoanBalance"
          },
          "prepaidLimitConfig": {
            "$ref": "#/components/schemas/PrepaidLimitConfig"
          },
          "toleranceConfig": {
            "$ref": "#/components/schemas/ToleranceConfig"
          }
        }
      },
      "LoanBalance": {
        "type": "object",
        "properties": {
          "upbAmount": {
            "type": "number",
            "format": "double"
          },
          "escrowBalanceAmount": {
            "type": "number",
            "format": "double"
          },
          "unappliedFundsBalanceAmount": {
            "type": "number",
            "format": "double"
          },
          "paymentBreakdown": {
            "$ref": "#/components/schemas/PaymentBreakdown"
          }
        }
      },
      "PaymentDecision": {
        "type": "object",
        "properties": {
          "hasPreconditionsPassed": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PaymentDecisionResponse": {
        "type": "object",
        "properties": {
          "userInput": {
            "$ref": "#/components/schemas/UserInput"
          },
          "paymentDecision": {
            "$ref": "#/components/schemas/PaymentDecision"
          },
          "loan": {
            "$ref": "#/components/schemas/Loan"
          },
          "preconditionCheckData": {
            "$ref": "#/components/schemas/PreconditionCheckData"
          },
          "transactionEntries": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "description": "\"Transaction Entries is a list of payment transaction entries.\" ",
            "items": {
              "$ref": "#/components/schemas/TransactionEntry"
            }
          },
          "contractualPaymentSequenceOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sequence"
            }
          },
          "corporateAdvanceSequenceOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sequence"
            }
          },
          "lateFeeSequenceOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sequence"
            }
          },
          "paymentSequenceOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentSequence"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "PaymentSequence": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "sequenceNumber": {
            "type": "integer",
            "format": "int32"
          },
          "paymentSequenceOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sequence"
            }
          }
        }
      },
      "PreconditionCheckData": {
        "type": "object",
        "properties": {
          "isWaterfallConfigAssigned": {
            "type": "boolean"
          },
          "isNoPaymentBlockAssigned": {
            "type": "boolean"
          },
          "isSCRAActive": {
            "type": "boolean"
          },
          "loanMaturityDate": {
            "type": "string"
          },
          "upbAmount": {
            "type": "number",
            "format": "double"
          },
          "fixedPaymentAmount": {
            "type": "number",
            "format": "double"
          },
          "nextScheduledDueDate": {
            "type": "string"
          },
          "principalAmount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "PrepaidLimitConfig": {
        "type": "object",
        "properties": {
          "frequencyType": {
            "type": "string"
          },
          "numberOfPayments": {
            "type": "integer",
            "format": "int32"
          },
          "prepaidEffectiveDays": {
            "type": "integer",
            "format": "int32"
          },
          "isEffectiveDaysActive": {
            "type": "boolean"
          }
        }
      },
      "Sequence": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "sequenceNumber": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ToleranceConfig": {
        "type": "object",
        "properties": {
          "isToleranceAllowed": {
            "type": "boolean"
          },
          "isToleranceAllowedOnPrepayment": {
            "type": "boolean"
          },
          "toleranceAmountAllowedPerPayment": {
            "type": "number",
            "format": "double"
          },
          "annualToleranceLimit": {
            "type": "number",
            "format": "double"
          },
          "toleranceAmountUsedByYear": {
            "type": "number",
            "format": "double"
          },
          "toleranceInstanceUsedByYear": {
            "type": "integer",
            "format": "int32"
          },
          "toleranceAmountUsedByLoanLifeLevel": {
            "type": "number",
            "format": "double"
          },
          "toleranceInstanceUsedByLoanLifeLevel": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserInput": {
        "type": "object",
        "properties": {
          "fundsReceived": {
            "type": "number",
            "format": "double"
          },
          "escrowInstructionAmount": {
            "type": "number",
            "format": "double"
          },
          "principalInstructionAmount": {
            "type": "number",
            "format": "double"
          },
          "paymentEffectiveDate": {
            "type": "string"
          }
        }
      },
      "AutoPayEventResponse": {
        "required": [
          "postedConfirmationNumber"
        ],
        "type": "object",
        "properties": {
          "postedConfirmationNumber": {
            "type": "string",
            "description": "Confirmation number generated by this service. "
          }
        }
      },
      "CreateAutoPayRequest": {
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "confirmationNumber": {
            "type": "string",
            "description": "Confirmation number generated by Sagent services. ",
            "example": "01GYDDJMCKRXWEQA3F53M1WN38"
          },
          "amount": {
            "type": "number",
            "description": "The amount of the order, net to transfer to receiver",
            "format": "double",
            "example": 2010.55
          }
        }
      },
      "ScheduledPayment": {
        "type": "object",
        "properties": {
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "scheduledDate": {
            "type": "string",
            "format": "date"
          },
          "coversPaymentThrough": {
            "type": "string",
            "format": "date"
          },
          "source": {
            "type": "string"
          },
          "accountDetails": {
            "$ref": "#/components/schemas/WalletDetails"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledTransactions"
            }
          },
          "confirmationNumber": {
            "type": "string"
          }
        }
      },
      "ScheduledTransactions": {
        "type": "object",
        "properties": {
          "transactionRequestId": {
            "type": "string"
          },
          "transactionRequestGuid": {
            "type": "string"
          },
          "transactionCode": {
            "type": "string"
          },
          "paymentSourceType": {
            "type": "string"
          },
          "paymentType": {
            "type": "string"
          },
          "isDebit": {
            "type": "boolean"
          },
          "txnDttm": {
            "type": "string",
            "format": "date"
          },
          "principalInterestAmount": {
            "type": "number",
            "format": "double"
          },
          "escrowAmount": {
            "type": "number",
            "format": "double"
          },
          "feeAmount": {
            "type": "number",
            "format": "double"
          },
          "principalAmount": {
            "type": "number",
            "format": "double"
          },
          "unappliedAmount": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "additionalEscrowAmount": {
            "type": "number",
            "format": "double"
          },
          "transactionRequestorId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "confirmationNumber": {
            "type": "string"
          },
          "isReversed": {
            "type": "boolean"
          },
          "paymentMethods": {
            "$ref": "#/components/schemas/WalletDetails"
          }
        }
      },
      "DeletedScheduledPayment": {
        "type": "object",
        "properties": {
          "deletedConfirmationNumber": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}